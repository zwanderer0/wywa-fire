---
import Layout from "../layouts/Layout.astro";
import PostCard from "../components/PostCard.astro";
import { getCollection } from "astro:content";

const posts = (await getCollection("updates", ({ data }) => !data.draft)).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf(),
);

const latest = posts[0];
const formattedLatestDate = latest
  ? new Intl.DateTimeFormat("en-US", {
      month: "long",
      day: "numeric",
      year: "numeric",
    }).format(latest.data.date)
  : null;
---

<Layout>
  <section class="wrap">
    {latest ? (
      <div class="intro">
        <h2>{latest.data.title}</h2>
        <p>
          {latest.data.description ??
            "A snapshot from the field: deployments, engineering calls, and the data we are watching this week."}
        </p>

        <div class="intro__meta">
          <time datetime={latest.data.date.toISOString()}>
            {formattedLatestDate}
          </time>
          <a class="intro__cta" href={`/updates/${latest.slug}/`}>
            Read update →
          </a>
        </div>
      </div>
    ) : (
      <div class="intro">
        <h2>Dispatches incoming.</h2>
        <p>
          We publish once a week. The first entry is nearly ready—check back
          soon or subscribe via RSS to be notified when the feed goes live.
        </p>
      </div>
    )}

    {posts.length ? (
      <ol class="post-list">
        {posts.map((post) => (
          <PostCard post={post} />
        ))}
      </ol>
    ) : (
      <div class="empty-state">
        <h3>No posts yet.</h3>
        <p>Once the first dispatch drops, the full archive will appear here.</p>
      </div>
    )}
  </section>
</Layout>
